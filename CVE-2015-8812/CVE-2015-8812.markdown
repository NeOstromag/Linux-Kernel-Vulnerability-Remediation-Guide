Оказавшись в системе пол логином "user", открываем терминал.  
Пропиываем комнду просмотра директории 
```
ls
```

Переходим в папку Downloads.  В папке Downloads видим заархивированный файл linux-4.4.14.tar.gz - это папка содержит текущее ядро.
```
cd Downloads/
```
(.tar.gz  – формат архива, выполняющий сжатие данных с помощью утилиты tar (для одного файла) и связки утилит gzip + tar (для нескольких файлов). Отличительная особенность — умение работать с непрерывным потоком данных. Поэтому GZ считается оптимальным инструментом для сжатия интернет-трафика.)


Для начала распакуем архив.
```
tar -xvf linux-4.4.14.tar.gz
```
Повторим команду просмотра директории. Теперь рядом с папкой linux-4.4.14.tar.gz оказалась папка linux-4.4.14. Это заархивированное ядро, с которым мы продолжим работу. 
```
ls
```
Заходим в папку linux-4.4.14 и наблюдаем там систему папок и файлов, которые и формирует ядро. 
```
ls linux-4.4.14/
```
---
 
Текущее описание:  
drivers/infiniband/hw/cxgb3/iwch_cm.c в ядре Linux до версии 4.5 неправильно определяет условия ошибки, что позволяет удаленным злоумышленникам выполнять произвольный код или вызывать отказ в обслуживании (use-after-free) с помощью созданных пакетов.  

**Базовая оценка: 9.8 КРИТИЧЕСКИЙ**

---
Чтобы исправить CVE-2016-10150 переходим в папку   hw  
```
cd linux-4.4.14\drivers\infiniband\hw\cxgb3
```
В папке cxgb3  нас интересует системный файл iwch_cm.c .  

  Этот файл написан на языке си, для его редактирования воспользуемся текстовым редактором nano.  
  
Прописываем:
```
nano iwch_cm.c
```
Перед нами открывается исходный код нашего драйвера. 

```
“ctrl+_”
```
Затем вводим номер проблемной строки 149.

Теперь заменим строку return error; на return error < 0 ? error : 0;
Аналогичное изменение проводим на 165 строке.


Таким образом получаем слудующие изменения:

149 строка:
```
static int iwch_l2t_send(struct t3cdev *tdev, struct sk_buff *skb, struct l2t_en
 	error = l2t_send(tdev, skb, l2e);
 	if (error < 0)
 		kfree_skb(skb);
	return error < 0 ? error : 0;
 }
 ```
 
165 строка:
```
int iwch_cxgb3_ofld_send(struct t3cdev *tdev, struct sk_buff *skb)
 	error = cxgb3_ofld_send(tdev, skb);
 	if (error < 0)
 		kfree_skb(skb);
	return error < 0 ? error : 0;
 ```
 
Добавляем нужные строчки, а после сохраняем файл комбинацией 
```
“ctrl+x”
``` 
Далее выбираем ```“Y”``` и жмем ```“enter”```.


**Исправления: исправлено некорректное возвращение ошибки при успешном выполнении.**


















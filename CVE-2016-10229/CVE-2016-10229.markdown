Оказавшись в системе пол логином "user", открываем терминал.  
Пропиываем комнду просмотра директории 
```
ls
```

Переходим в папку Downloads.  В папке Downloads видим заархивированный файл linux-4.4.14.tar.gz - это папка содержит текущее ядро.
```
cd Downloads/
```
(.tar.gz  – формат архива, выполняющий сжатие данных с помощью утилиты tar (для одного файла) и связки утилит gzip + tar (для нескольких файлов). Отличительная особенность — умение работать с непрерывным потоком данных. Поэтому GZ считается оптимальным инструментом для сжатия интернет-трафика.)


Для начала распакуем архив.
```
tar -xvf linux-4.4.14.tar.gz
```
Повторим команду просмотра директории. Теперь рядом с папкой linux-4.4.14.tar.gz оказалась папка linux-4.4.14. Это заархивированное ядро, с которым мы продолжим работу. 
```
ls
```
Заходим в папку linux-4.4.14 и наблюдаем там систему папок и файлов, которые и формирует ядро. 
```
ls linux-4.4.14/
```
---
 
Текущее описание:  
udp.c в ядре Linux до версии 4.5 позволяет удаленным злоумышленникам выполнять произвольный код через UDP-трафик, который вызывает небезопасное вычисление второй контрольной суммы во время выполнения системного вызова recv с флагом MSG_PEEK.

**Базовая оценка: 9.8 КРИТИЧЕСКИЙ**

---
Уязвимость исправляеся в 2 этапа:  
1) исправление IPv4  
2) исправление IPv6 


***Первый этап:***  
Переходим в папку IPv4

```
cd linux-4.4.14\net\ipv4
```
Internet Protocol version 4 (IPv4) - это четвертая версия Интернет-протокола (IP). Это один из основных протоколов стандартных методов работы в Интернете и других сетях с коммутацией пакетов.  


В папке IPv4 нас интересует системный файл udp.c . Этот файл написан на языке си, для его редактирования воспользуемся текстовым редактором nano. 
  
Прописываем:
```
nano udp.c
```
Перед нами открывается исходный код нашего драйвера. 

```
“ctrl+_”
```
Затем вводим номер проблемной строки 1271.  

На этой строке добавляем:
```
 bool checksum_valid = false;
```
Теперь заменим 1296 строку: 
``` 
                                                      checksum_valid = !udp_lib_checksum_complete(skb);         
if (udp_lib_checksum_complete(skb))       ----->      if (!checksum_valid)
                                           	
```
***Второй этап:***  
Переходим в папку IPv6

```
cd linux-4.4.14\net\ipv6
```
IPv6 (протокол IP версии 6), определяемый в сетевом этикете RFC 2460, является последним поколением протокола IP, определенного стандартом рабочей группы проектирования Интернета (IETF). Первой стабильной версией протокола IP является IPv4 (версия IP 4).  

Учитывая то, что IPv6 призван в конечном итоге заменить IPv4, сейчас они тесно взаимодействуют, большинство инженеров их используют одновременно.



В папке IPv6 нас интересует системный файл udp.c . Этот файл написан на языке си, для его редактирования воспользуемся текстовым редактором nano. 
  
Прописываем:
```
nano udp.c
```
Перед нами открывается исходный код нашего драйвера. 

```
“ctrl+_”
```
Затем вводим номер проблемной строки 433.  

Теперь изменим код начиная с 433 строки: 
``` 
                                                      checksum_valid = !udp_lib_checksum_complete(skb);         
if (udp_lib_checksum_complete(skb))       ----->      if (!checksum_valid)
                                           	
```

Таким образом получаем слудующие изменения:

433 строка:
```
if (copied < ulen || UDP_SKB_CB(skb)->partial_cov) {
		checksum_valid = !udp_lib_checksum_complete(skb);
		if (!checksum_valid)
 			goto csum_copy_err;
 	}
 
	if (checksum_valid || skb_csum_unnecessary(skb))
 		err = skb_copy_datagram_msg(skb, sizeof(struct udphdr),
 					    msg, copied);
 	else {

 }
 ```
 
Добавляем нужные строчки, а после сохраняем файл комбинацией 
```
“ctrl+x”
``` 
Далее выбираем ```“Y”``` и жмем ```“enter”```.


**Исправления: ??налажен поток UDP-трафика.**

















